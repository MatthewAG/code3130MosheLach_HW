Every language feature has:
 - syntax: grammar rules
 - semantics: meaning

Semantics of a record: an immutable carrier of data
    record Point(int x, int y) {
        double distanceTo(Point other) {
            // ...
        }
    }

Semantics of a class:
 1. a possibly-mutable carrier of data
    Example: StringBuilder
    class BankAccount {
        private String accountNumber = ...;
        private int balance = 0;

        public void deposit(int amount) {
            balance += amount;
        }
    }
2.  a processor
    Example: Scanner
    class Averager {
        private double sum = 0;
        private int count = 0;

        public void add(double x) {
            sum += x;
            count++;
        }

        public double average() {
            return sum / count;
        }
    }

semantics of an abstract class:
a partial implementation: has some instance fields,
but others are deferred to subclasses;
has some concrete methods, and also some
abstract methods deferred to subclasses to implement

Records, classes, abstract classes, and interfaces
are ways of defining new types.